require(lme4)
str(Dyestuff)
library(lattice)
plot(Dyestuff)
xyplot(Yield~Batch,Dyestuff)

print(dotplot(reorder(Batch, Yield) ~ Yield, Dyestuff,
              ylab = "Batch", jitter.y = TRUE, pch = 21,
              xlab = "Yield of dyestuff (grams of standard color)",
              type = c("p", "a")))

fm01 <- lmer(Yield ~ 1 + (1|Batch), Dyestuff)
fm01

## Notice that the Residual variability between Batch-es in the Random
## effects...

#Random effects:
#   Groups   Name        Std.Dev.
#Batch    (Intercept) 42.00   
#Residual             49.51 

# The Residual of the the Rand. Effects is: # 49.51, while 
# The square root of the quadratic mean of SD's is:

sd_Batch <- vector()
for(i in levels(Dyestuff[,1])){
  sd_Batch[i] <- sd(Dyestuff[Dyestuff$Batch==i,'Yield'])
}

sqrt(sum(sd_Batch^2)/nlevels(Dyestuff$Batch))
#[1] 49.5101

# The Random Eff variance (Intercept) is close, BUT not quite...

SS_Between <- vector()
for(i in levels(Dyestuff[,1])){
  SS_Between[i] <- ((mean(Dyestuff[Dyestuff$Batch==i,"Yield"])-
                       mean(Dyestuff$Yield))^2)*sum(Dyestuff$Batch==i)
}

sqrt(sum(SS_Between)/nrow(Dyestuff))

#[1] 43.34263 compared to 42.00. Reducing the denominator (degrees of freedom instead of number of total observations)
# would only increase the result, moving it further from 42.00. Why this discrepancy? I don't know.

require(arm)
sqrt((var(ranef(fm01)$Batch))+(1/6*sum((se.ranef(fm01)$Batch)^2)))
#(Intercept)
#(Intercept)     42.0006
